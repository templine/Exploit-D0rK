// Decompiled with JetBrains decompiler
// Type: TSP_Dork_generator_hot_edition.Form1
// Assembly: TSP Dork generator hot edition, Version=9.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0F3D78C8-62B2-439E-B37E-99CE9EE7E3BF
// Assembly location: C:\Users\William\Desktop\TSP Dork generator v9.0\TSP Dork generator v9.0\TSP Dork generator hot edition.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace TSP_Dork_generator_hot_edition
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private bool drag;
    private int mousex;
    private int mousey;
    private IContainer components;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.InitializeComponent();
    }

    private void DorkGeneratorButton_Click(object sender, EventArgs e)
    {
      this.DorkGeneratorActive.Visible = true;
      this.ExtractorActive.Visible = false;
      this.InfoActive.Visible = false;
      this.SettingsActive.Visible = false;
      this.Extractor_panel1.Visible = false;
      this.Generate_dorks_panel1.Visible = true;
      this.Info_panel1.Visible = false;
      this.Settings_panel1.Visible = false;
    }

    private void ExtractorButton_Click(object sender, EventArgs e)
    {
      this.DorkGeneratorActive.Visible = false;
      this.ExtractorActive.Visible = true;
      this.InfoActive.Visible = false;
      this.SettingsActive.Visible = false;
      this.Extractor_panel1.Visible = true;
      this.Generate_dorks_panel1.Visible = false;
      this.Info_panel1.Visible = false;
      this.Settings_panel1.Visible = false;
    }

    private void SettingsButton_Click(object sender, EventArgs e)
    {
      this.DorkGeneratorActive.Visible = false;
      this.ExtractorActive.Visible = false;
      this.InfoActive.Visible = false;
      this.SettingsActive.Visible = true;
      this.Extractor_panel1.Visible = false;
      this.Generate_dorks_panel1.Visible = false;
      this.Info_panel1.Visible = false;
      this.Settings_panel1.Visible = true;
    }

    private void InfoButton_Click(object sender, EventArgs e)
    {
      this.DorkGeneratorActive.Visible = false;
      this.ExtractorActive.Visible = false;
      this.InfoActive.Visible = true;
      this.SettingsActive.Visible = false;
      this.Extractor_panel1.Visible = false;
      this.Generate_dorks_panel1.Visible = false;
      this.Info_panel1.Visible = true;
      this.Settings_panel1.Visible = false;
    }

    private void label2_Click(object sender, EventArgs e) => this.Close();

    private void label1_Click(object sender, EventArgs e) => this.WindowState = FormWindowState.Minimized;

    private void Form1_Load(object sender, EventArgs e)
    {
      this.DorkGeneratorActive.Visible = true;
      this.ExtractorActive.Visible = false;
      this.InfoActive.Visible = false;
      this.SettingsActive.Visible = false;
      this.label3.Text = "TSP Dork generator v" + Application.ProductVersion;
      this.Extractor_panel1.Visible = false;
      this.Generate_dorks_panel1.Visible = true;
      this.Info_panel1.Visible = false;
      this.Settings_panel1.Visible = false;
    }

    private void panel2_Paint(object sender, PaintEventArgs e)
    {
    }

    private void panel2_MouseDown(object sender, MouseEventArgs e)
    {
      this.drag = true;
      this.mousex = checked (Cursor.Position.X - this.Left);
      this.mousey = checked (Cursor.Position.Y - this.Top);
    }

    private void panel2_MouseMove(object sender, MouseEventArgs e)
    {
      if (!this.drag)
        return;
      Point position = Cursor.Position;
      this.Top = checked (position.Y - this.mousey);
      position = Cursor.Position;
      this.Left = checked (position.X - this.mousex);
    }

    private void panel2_MouseUp(object sender, MouseEventArgs e) => this.drag = false;

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form1));
      this.label3 = new Label();
      this.DorkGeneratorButton = new Button();
      this.DorkGeneratorActive = new Panel();
      this.tableLayoutPanel1 = new TableLayoutPanel();
      this.SettingsButton = new Button();
      this.SettingsActive = new Panel();
      this.tableLayoutPanel5 = new TableLayoutPanel();
      this.panel2 = new Panel();
      this.tableLayoutPanel2 = new TableLayoutPanel();
      this.label1 = new Label();
      this.label2 = new Label();
      this.ExtractorButton = new Button();
      this.ExtractorActive = new Panel();
      this.InfoButton = new Button();
      this.InfoActive = new Panel();
      this.tableLayoutPanel4 = new TableLayoutPanel();
      this.panel1 = new Panel();
      this.tableLayoutPanel3 = new TableLayoutPanel();
      this.Generate_dorks_panel1 = new generate_dorks_panel();
      this.Extractor_panel1 = new extractor_panel();
      this.Settings_panel1 = new settings_panel();
      this.Info_panel1 = new info_panel();
      this.tableLayoutPanel1.SuspendLayout();
      this.tableLayoutPanel5.SuspendLayout();
      this.panel2.SuspendLayout();
      this.tableLayoutPanel2.SuspendLayout();
      this.tableLayoutPanel4.SuspendLayout();
      this.panel1.SuspendLayout();
      this.tableLayoutPanel3.SuspendLayout();
      this.SuspendLayout();
      this.label3.AutoSize = true;
      this.label3.Font = new Font("Consolas", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.label3.ForeColor = Color.White;
      this.label3.Location = new Point(2, 5);
      this.label3.Margin = new Padding(2, 0, 2, 0);
      this.label3.Name = "label3";
      this.label3.Size = new Size(216, 19);
      this.label3.TabIndex = 10;
      this.label3.Text = "TSP Dork generator vX.X";
      this.DorkGeneratorButton.FlatAppearance.BorderSize = 0;
      this.DorkGeneratorButton.FlatStyle = FlatStyle.Flat;
      this.DorkGeneratorButton.Font = new Font("Consolas", 11.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.DorkGeneratorButton.ForeColor = Color.White;
      this.DorkGeneratorButton.Image = (Image) componentResourceManager.GetObject("DorkGeneratorButton.Image");
      this.DorkGeneratorButton.ImageAlign = ContentAlignment.MiddleLeft;
      this.DorkGeneratorButton.Location = new Point(19, 3);
      this.DorkGeneratorButton.Name = "DorkGeneratorButton";
      this.DorkGeneratorButton.Size = new Size(198, 50);
      this.DorkGeneratorButton.TabIndex = 16;
      this.DorkGeneratorButton.Text = " Dork generator";
      this.DorkGeneratorButton.TextAlign = ContentAlignment.MiddleLeft;
      this.DorkGeneratorButton.TextImageRelation = TextImageRelation.ImageBeforeText;
      this.DorkGeneratorButton.UseVisualStyleBackColor = true;
      this.DorkGeneratorActive.BackColor = Color.FromArgb(175, 20, 25);
      this.DorkGeneratorActive.Location = new Point(3, 3);
      this.DorkGeneratorActive.Name = "DorkGeneratorActive";
      this.DorkGeneratorActive.Size = new Size(10, 47);
      this.DorkGeneratorActive.TabIndex = 11;
      this.tableLayoutPanel1.BackColor = Color.FromArgb(40, 40, 40);
      this.tableLayoutPanel1.ColumnCount = 3;
      this.tableLayoutPanel1.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel1.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel1.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel1.Controls.Add((Control) this.DorkGeneratorButton, 2, 0);
      this.tableLayoutPanel1.Controls.Add((Control) this.DorkGeneratorActive, 0, 0);
      this.tableLayoutPanel1.Location = new Point(-1, 10);
      this.tableLayoutPanel1.Name = "tableLayoutPanel1";
      this.tableLayoutPanel1.RowCount = 1;
      this.tableLayoutPanel1.RowStyles.Add(new RowStyle());
      this.tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Absolute, 56f));
      this.tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Absolute, 56f));
      this.tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Absolute, 56f));
      this.tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Absolute, 56f));
      this.tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Absolute, 56f));
      this.tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Absolute, 56f));
      this.tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Absolute, 56f));
      this.tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Absolute, 56f));
      this.tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Absolute, 56f));
      this.tableLayoutPanel1.Size = new Size(217, 54);
      this.tableLayoutPanel1.TabIndex = 10;
      this.SettingsButton.FlatAppearance.BorderSize = 0;
      this.SettingsButton.FlatStyle = FlatStyle.Flat;
      this.SettingsButton.Font = new Font("Consolas", 11.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.SettingsButton.ForeColor = Color.White;
      this.SettingsButton.Image = (Image) componentResourceManager.GetObject("SettingsButton.Image");
      this.SettingsButton.ImageAlign = ContentAlignment.MiddleLeft;
      this.SettingsButton.Location = new Point(19, 3);
      this.SettingsButton.Name = "SettingsButton";
      this.SettingsButton.Size = new Size(198, 50);
      this.SettingsButton.TabIndex = 18;
      this.SettingsButton.Text = " Settings";
      this.SettingsButton.TextAlign = ContentAlignment.MiddleLeft;
      this.SettingsButton.TextImageRelation = TextImageRelation.ImageBeforeText;
      this.SettingsButton.UseVisualStyleBackColor = true;
      this.SettingsActive.BackColor = Color.FromArgb(175, 20, 25);
      this.SettingsActive.Location = new Point(3, 3);
      this.SettingsActive.Name = "SettingsActive";
      this.SettingsActive.Size = new Size(10, 47);
      this.SettingsActive.TabIndex = 11;
      this.tableLayoutPanel5.ColumnCount = 3;
      this.tableLayoutPanel5.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel5.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel5.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel5.Controls.Add((Control) this.SettingsButton, 1, 0);
      this.tableLayoutPanel5.Controls.Add((Control) this.SettingsActive, 0, 0);
      this.tableLayoutPanel5.Location = new Point(-1, 132);
      this.tableLayoutPanel5.Name = "tableLayoutPanel5";
      this.tableLayoutPanel5.RowCount = 1;
      this.tableLayoutPanel5.RowStyles.Add(new RowStyle());
      this.tableLayoutPanel5.Size = new Size(217, 54);
      this.tableLayoutPanel5.TabIndex = 13;
      this.panel2.BackColor = Color.FromArgb(175, 20, 25);
      this.panel2.Controls.Add((Control) this.label3);
      this.panel2.Controls.Add((Control) this.tableLayoutPanel2);
      this.panel2.Dock = DockStyle.Top;
      this.panel2.Location = new Point(0, 0);
      this.panel2.Name = "panel2";
      this.panel2.Size = new Size(1277, 30);
      this.panel2.TabIndex = 11;
      this.tableLayoutPanel2.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.tableLayoutPanel2.BackColor = Color.FromArgb(175, 20, 25);
      this.tableLayoutPanel2.ColumnCount = 2;
      this.tableLayoutPanel2.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel2.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel2.Controls.Add((Control) this.label1, 0, 0);
      this.tableLayoutPanel2.Controls.Add((Control) this.label2, 1, 0);
      this.tableLayoutPanel2.Location = new Point(1221, 0);
      this.tableLayoutPanel2.Name = "tableLayoutPanel2";
      this.tableLayoutPanel2.RowCount = 1;
      this.tableLayoutPanel2.RowStyles.Add(new RowStyle(SizeType.Percent, 100f));
      this.tableLayoutPanel2.RowStyles.Add(new RowStyle(SizeType.Absolute, 29f));
      this.tableLayoutPanel2.Size = new Size(56, 29);
      this.tableLayoutPanel2.TabIndex = 7;
      this.label1.AutoSize = true;
      this.label1.BackColor = Color.FromArgb(175, 20, 25);
      this.label1.Font = new Font("Consolas", 15.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.label1.ForeColor = Color.White;
      this.label1.Location = new Point(2, 0);
      this.label1.Margin = new Padding(2, 0, 2, 0);
      this.label1.Name = "label1";
      this.label1.Size = new Size(22, 24);
      this.label1.TabIndex = 0;
      this.label1.Text = "-";
      this.label2.AutoSize = true;
      this.label2.BackColor = Color.FromArgb(175, 20, 25);
      this.label2.Font = new Font("Consolas", 15.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.label2.ForeColor = Color.White;
      this.label2.Location = new Point(29, 0);
      this.label2.Name = "label2";
      this.label2.Size = new Size(22, 24);
      this.label2.TabIndex = 1;
      this.label2.Text = "x";
      this.ExtractorButton.FlatAppearance.BorderSize = 0;
      this.ExtractorButton.FlatStyle = FlatStyle.Flat;
      this.ExtractorButton.Font = new Font("Consolas", 11.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ExtractorButton.ForeColor = Color.White;
      this.ExtractorButton.Image = (Image) componentResourceManager.GetObject("ExtractorButton.Image");
      this.ExtractorButton.ImageAlign = ContentAlignment.MiddleLeft;
      this.ExtractorButton.Location = new Point(19, 3);
      this.ExtractorButton.Name = "ExtractorButton";
      this.ExtractorButton.Size = new Size(198, 50);
      this.ExtractorButton.TabIndex = 17;
      this.ExtractorButton.Text = " Extractor";
      this.ExtractorButton.TextAlign = ContentAlignment.MiddleLeft;
      this.ExtractorButton.TextImageRelation = TextImageRelation.ImageBeforeText;
      this.ExtractorButton.UseVisualStyleBackColor = true;
      this.ExtractorActive.BackColor = Color.FromArgb(175, 20, 25);
      this.ExtractorActive.Location = new Point(3, 3);
      this.ExtractorActive.Name = "ExtractorActive";
      this.ExtractorActive.Size = new Size(10, 47);
      this.ExtractorActive.TabIndex = 11;
      this.InfoButton.FlatAppearance.BorderSize = 0;
      this.InfoButton.FlatStyle = FlatStyle.Flat;
      this.InfoButton.Font = new Font("Consolas", 11.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.InfoButton.ForeColor = Color.White;
      this.InfoButton.Image = (Image) componentResourceManager.GetObject("InfoButton.Image");
      this.InfoButton.ImageAlign = ContentAlignment.MiddleLeft;
      this.InfoButton.Location = new Point(19, 3);
      this.InfoButton.Name = "InfoButton";
      this.InfoButton.Size = new Size(198, 50);
      this.InfoButton.TabIndex = 19;
      this.InfoButton.Text = " Info";
      this.InfoButton.TextAlign = ContentAlignment.MiddleLeft;
      this.InfoButton.TextImageRelation = TextImageRelation.ImageBeforeText;
      this.InfoButton.UseVisualStyleBackColor = true;
      this.InfoActive.BackColor = Color.FromArgb(175, 20, 25);
      this.InfoActive.Location = new Point(3, 3);
      this.InfoActive.Name = "InfoActive";
      this.InfoActive.Size = new Size(10, 47);
      this.InfoActive.TabIndex = 11;
      this.tableLayoutPanel4.ColumnCount = 3;
      this.tableLayoutPanel4.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel4.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel4.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel4.Controls.Add((Control) this.InfoButton, 1, 0);
      this.tableLayoutPanel4.Controls.Add((Control) this.InfoActive, 0, 0);
      this.tableLayoutPanel4.Location = new Point(-1, 193);
      this.tableLayoutPanel4.Name = "tableLayoutPanel4";
      this.tableLayoutPanel4.RowCount = 1;
      this.tableLayoutPanel4.RowStyles.Add(new RowStyle());
      this.tableLayoutPanel4.Size = new Size(217, 54);
      this.tableLayoutPanel4.TabIndex = 12;
      this.panel1.BackColor = Color.FromArgb(40, 40, 40);
      this.panel1.Controls.Add((Control) this.tableLayoutPanel4);
      this.panel1.Controls.Add((Control) this.tableLayoutPanel3);
      this.panel1.Controls.Add((Control) this.tableLayoutPanel5);
      this.panel1.Controls.Add((Control) this.tableLayoutPanel1);
      this.panel1.Dock = DockStyle.Left;
      this.panel1.Location = new Point(0, 30);
      this.panel1.Name = "panel1";
      this.panel1.Size = new Size(218, 258);
      this.panel1.TabIndex = 10;
      this.tableLayoutPanel3.ColumnCount = 3;
      this.tableLayoutPanel3.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel3.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel3.ColumnStyles.Add(new ColumnStyle());
      this.tableLayoutPanel3.Controls.Add((Control) this.ExtractorButton, 1, 0);
      this.tableLayoutPanel3.Controls.Add((Control) this.ExtractorActive, 0, 0);
      this.tableLayoutPanel3.Location = new Point(-1, 71);
      this.tableLayoutPanel3.Name = "tableLayoutPanel3";
      this.tableLayoutPanel3.RowCount = 1;
      this.tableLayoutPanel3.RowStyles.Add(new RowStyle());
      this.tableLayoutPanel3.Size = new Size(217, 54);
      this.tableLayoutPanel3.TabIndex = 11;
      this.Generate_dorks_panel1.Location = new Point(218, 30);
      this.Generate_dorks_panel1.Name = "Generate_dorks_panel1";
      this.Generate_dorks_panel1.Size = new Size(1059, 258);
      this.Generate_dorks_panel1.TabIndex = 12;
      this.Extractor_panel1.Location = new Point(218, 30);
      this.Extractor_panel1.Name = "Extractor_panel1";
      this.Extractor_panel1.Size = new Size(1059, 258);
      this.Extractor_panel1.TabIndex = 13;
      this.Settings_panel1.Location = new Point(218, 30);
      this.Settings_panel1.Name = "Settings_panel1";
      this.Settings_panel1.Size = new Size(1059, 258);
      this.Settings_panel1.TabIndex = 14;
      this.Info_panel1.Location = new Point(218, 30);
      this.Info_panel1.Name = "Info_panel1";
      this.Info_panel1.Size = new Size(1059, 258);
      this.Info_panel1.TabIndex = 15;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(1277, 288);
      this.Controls.Add((Control) this.Info_panel1);
      this.Controls.Add((Control) this.Settings_panel1);
      this.Controls.Add((Control) this.Extractor_panel1);
      this.Controls.Add((Control) this.Generate_dorks_panel1);
      this.Controls.Add((Control) this.panel1);
      this.Controls.Add((Control) this.panel2);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.MaximumSize = new Size(1277, 288);
      this.MinimumSize = new Size(1277, 288);
      this.Name = nameof (Form1);
      this.Text = nameof (Form1);
      this.tableLayoutPanel1.ResumeLayout(false);
      this.tableLayoutPanel5.ResumeLayout(false);
      this.panel2.ResumeLayout(false);
      this.panel2.PerformLayout();
      this.tableLayoutPanel2.ResumeLayout(false);
      this.tableLayoutPanel2.PerformLayout();
      this.tableLayoutPanel4.ResumeLayout(false);
      this.panel1.ResumeLayout(false);
      this.tableLayoutPanel3.ResumeLayout(false);
      this.ResumeLayout(false);
    }

    [field: AccessedThroughProperty("label3")]
    public virtual Label label3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    public virtual Button DorkGeneratorButton
    {
      get => this._DorkGeneratorButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.DorkGeneratorButton_Click);
        Button dorkGeneratorButton1 = this._DorkGeneratorButton;
        if (dorkGeneratorButton1 != null)
          dorkGeneratorButton1.Click -= eventHandler;
        this._DorkGeneratorButton = value;
        Button dorkGeneratorButton2 = this._DorkGeneratorButton;
        if (dorkGeneratorButton2 == null)
          return;
        dorkGeneratorButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("DorkGeneratorActive")]
    public virtual Panel DorkGeneratorActive { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("tableLayoutPanel1")]
    public virtual TableLayoutPanel tableLayoutPanel1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    public virtual Button SettingsButton
    {
      get => this._SettingsButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.SettingsButton_Click);
        Button settingsButton1 = this._SettingsButton;
        if (settingsButton1 != null)
          settingsButton1.Click -= eventHandler;
        this._SettingsButton = value;
        Button settingsButton2 = this._SettingsButton;
        if (settingsButton2 == null)
          return;
        settingsButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("SettingsActive")]
    public virtual Panel SettingsActive { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("tableLayoutPanel5")]
    public virtual TableLayoutPanel tableLayoutPanel5 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    public virtual Panel panel2
    {
      get => this._panel2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        PaintEventHandler paintEventHandler = new PaintEventHandler(this.panel2_Paint);
        MouseEventHandler mouseEventHandler1 = new MouseEventHandler(this.panel2_MouseDown);
        MouseEventHandler mouseEventHandler2 = new MouseEventHandler(this.panel2_MouseMove);
        MouseEventHandler mouseEventHandler3 = new MouseEventHandler(this.panel2_MouseUp);
        Panel panel2_1 = this._panel2;
        if (panel2_1 != null)
        {
          panel2_1.Paint -= paintEventHandler;
          panel2_1.MouseDown -= mouseEventHandler1;
          panel2_1.MouseMove -= mouseEventHandler2;
          panel2_1.MouseUp -= mouseEventHandler3;
        }
        this._panel2 = value;
        Panel panel2_2 = this._panel2;
        if (panel2_2 == null)
          return;
        panel2_2.Paint += paintEventHandler;
        panel2_2.MouseDown += mouseEventHandler1;
        panel2_2.MouseMove += mouseEventHandler2;
        panel2_2.MouseUp += mouseEventHandler3;
      }
    }

    [field: AccessedThroughProperty("tableLayoutPanel2")]
    public virtual TableLayoutPanel tableLayoutPanel2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    public virtual Label label1
    {
      get => this._label1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.label1_Click);
        Label label1_1 = this._label1;
        if (label1_1 != null)
          label1_1.Click -= eventHandler;
        this._label1 = value;
        Label label1_2 = this._label1;
        if (label1_2 == null)
          return;
        label1_2.Click += eventHandler;
      }
    }

    public virtual Label label2
    {
      get => this._label2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.label2_Click);
        Label label2_1 = this._label2;
        if (label2_1 != null)
          label2_1.Click -= eventHandler;
        this._label2 = value;
        Label label2_2 = this._label2;
        if (label2_2 == null)
          return;
        label2_2.Click += eventHandler;
      }
    }

    public virtual Button ExtractorButton
    {
      get => this._ExtractorButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ExtractorButton_Click);
        Button extractorButton1 = this._ExtractorButton;
        if (extractorButton1 != null)
          extractorButton1.Click -= eventHandler;
        this._ExtractorButton = value;
        Button extractorButton2 = this._ExtractorButton;
        if (extractorButton2 == null)
          return;
        extractorButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("ExtractorActive")]
    public virtual Panel ExtractorActive { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    public virtual Button InfoButton
    {
      get => this._InfoButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.InfoButton_Click);
        Button infoButton1 = this._InfoButton;
        if (infoButton1 != null)
          infoButton1.Click -= eventHandler;
        this._InfoButton = value;
        Button infoButton2 = this._InfoButton;
        if (infoButton2 == null)
          return;
        infoButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("InfoActive")]
    public virtual Panel InfoActive { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("tableLayoutPanel4")]
    public virtual TableLayoutPanel tableLayoutPanel4 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("panel1")]
    public virtual Panel panel1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("tableLayoutPanel3")]
    public virtual TableLayoutPanel tableLayoutPanel3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Generate_dorks_panel1")]
    public virtual generate_dorks_panel Generate_dorks_panel1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Extractor_panel1")]
    public virtual extractor_panel Extractor_panel1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Settings_panel1")]
    public virtual settings_panel Settings_panel1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Info_panel1")]
    public virtual info_panel Info_panel1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }
  }
}
